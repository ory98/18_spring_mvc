<?xml version="1.0" encoding="UTF-8"?>

<!-- Mybatis mapper 파일임을 명시하기 위한 DTD 선언문 (반드시 작성한다.) -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 

	* namespace속성 : mapper의 식별자이며 중복 없이 고유해야 한다.
    
    * id속성        : query의 식별자이며 중복 없이 고유해야 한다.
                      namespace와 id속성을 연결시켜 dao에서 호출한다.
                      
                      Ex)
                      	namespace = goods
                      		id = goodsList    > goods.goodsList
                      		id = insertGoods  > goods.insertGoods
                      		id = deleteGoods  > goods.deleteGoods

						namespace = member
							id = memberList	  > member.memberList
							id = addMember	  > member.addMember
							id = modifyMember > member.modifyMember

	* resultType속성 : 반환되는 데이터의 타입을 명시하며 반환데이터가 있는 select쿼리문에서 사용한다.
						int , String , Map , ~dto
					   
					   dto타입은 mybatis-config.xml파일에서 alias(별칭)지정을 하여 간략하게 사용할 수 있다.
						
	* resultMap속성  : 주로 반환되는 데이터의 컬럼명을 pojo변수와 일치시키거나 map 컬렉션프레임워크의 키값으로 등록시키기 위하여 사용한다.
 
 	* parameterType속성 : dao에서 쿼리문으로 전달되는 파라미터의 타입을 명시하며 , 생략가능하다. 
 	
 -->

<!-- 쿼리문 작성 -->
<mapper namespace="dataTransfer">

	<select id="select1" resultType="int">
		SELECT
				COUNT(*)
		FROM
				T_MEMBER
	</select>
	
	<!--  

	 	 <![CDATA[]]> 는 SQL 내부에 연산자가 있을 경우 사용한다. ( '>' '<' 연산자가 태그와 혼동되기 때문 )
	
	 	- 쿼리 내부에 연산자가 없어도 코드의 통일성을 주기 위해 <![CDATA[]]>를 사용하기도 한다. 
		
	-->
	
	<select id="select2" resultType="com.spring.mvc.dataTransfer.dto.ProductDto">
		
		<![CDATA[ 
		SELECT
				*
		FROM	
				T_PRODUCT
		WHERE
				PRODUCT_PRICE < 1000000
		]]>
		
	</select>
	
	<select id="select3"></select>
	<select id="select4"></select>
	<select id="select5"></select>
	
</mapper>